<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<configuration>


  <property>
    <name>nifi.node.ssl.isenabled</name>
    <value>false</value>
    <display-name>Enable SSL?</display-name>
    <description>whether SSL is enabled (false by default)</description>
    <value-attributes>
      <type>boolean</type>
    </value-attributes>    
    <on-ambari-upgrade add="true"/>
  </property>
  <property>
    <name>nifi.security.keystore</name>
    <value/>
    <value-attributes>
      <empty-value-valid>true</empty-value-valid>
    </value-attributes>
    <on-ambari-upgrade add="true"/>
    <display-name>Keystore path</display-name>
    <description>The full path and name of the keystore. It is blank by default but required if nifi.node.ssl.isenabled=true. To reference paths that include hostnames you can use format such as: /etc/security/nifi-certs/{nifi_node_ssl_host}/{nifi_node_ssl_host}.jks</description>
  </property>
  <property>
    <name>nifi.security.keystoreType</name>
    <value/>
    <value-attributes>
      <empty-value-valid>true</empty-value-valid>
    </value-attributes>
    <on-ambari-upgrade add="true"/>
    <display-name>Keystore type</display-name>
    <description>The keystore type. It is blank by default but required if nifi.node.ssl.isenabled=true. e.g. jks</description>
  </property>
  <property>
    <name>nifi.security.keystorePasswd</name>
    <value></value>
    <property-type>PASSWORD</property-type>    
    <display-name>Keystore password</display-name>        
    <description>The keystore password. It is blank by default but required if nifi.node.ssl.isenabled=true.</description>    
    <value-attributes>
      <empty-value-valid>true</empty-value-valid>    
      <type>password</type>
    </value-attributes>
    <on-ambari-upgrade add="true"/>        
  </property>
  <property>
    <name>nifi.security.keyPasswd</name>
    <value/>
    <property-type>PASSWORD</property-type>    
    <display-name>Key password</display-name>        
    <description>The key password. It is blank by default but required if nifi.node.ssl.isenabled=true.</description>    
    <value-attributes>
      <empty-value-valid>true</empty-value-valid>    
      <type>password</type>
    </value-attributes>
    <on-ambari-upgrade add="true"/>        
  </property>
  <property>
    <name>nifi.security.truststore</name>
    <value/>
    <value-attributes>
      <empty-value-valid>true</empty-value-valid>
    </value-attributes>
    <on-ambari-upgrade add="true"/>
    <display-name>Truststore path</display-name>
    <description>The full path and name of the truststore. It is blank by default but required if nifi.node.ssl.isenabled=true. To reference paths that include hostnames you can use format such as: /etc/security/nifi-certs/{nifi_node_ssl_host}/truststore.jks</description>
  </property>
  <property>
    <name>nifi.security.truststoreType</name>
    <value/>
    <value-attributes>
      <empty-value-valid>true</empty-value-valid>
    </value-attributes>
    <on-ambari-upgrade add="true"/>
    <display-name>Truststore type</display-name>    
    <description>The truststore type. It is blank by default but required if nifi.node.ssl.isenabled=true. e.g. jks</description>
  </property>
  <property>
    <name>nifi.security.truststorePasswd</name>
    <value/>
    <property-type>PASSWORD</property-type>    
    <display-name>Truststore password</display-name>        
    <description>The truststore password. It is blank by default but required if nifi.node.ssl.isenabled=true.</description>    
    <value-attributes>
      <empty-value-valid>true</empty-value-valid>    
      <type>password</type>
    </value-attributes>
    <on-ambari-upgrade add="true"/>        
  </property>
  <property>
    <name>nifi.security.needClientAuth</name>
    <value>false</value>
    <value-attributes>
      <empty-value-valid>true</empty-value-valid>
    </value-attributes>
    <on-ambari-upgrade add="true"/>
    <value-attributes>
      <type>boolean</type>
    </value-attributes>      
    <display-name>Clients need to authenticate?</display-name>      
    <description>Specifies whether or not connecting clients must authenticate themselves. Specifically this property is used by the NiFi cluster protocol. If the Truststore properties are not set, this must be false. Otherwise, a value of true indicates that nodes in the cluster will be authenticated and must have certificates that are trusted by the Truststores.</description>
  </property>



</configuration>
