<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<configuration>


  <property>
    <name>nifi.node.port</name>
    <value>9090</value>
    <description>Port NiFi node runs on when SSL is not enabled</description>
    <on-ambari-upgrade add="true"/>
  </property>

  <property>
    <name>nifi.node.protocol.port</name>
    <value>9088</value>
    <description>Port NiFi node protocol runs on</description>
    <on-ambari-upgrade add="true"/>
  </property>

  <property>
    <name>nifi.node.ssl.isenabled</name>
    <value>false</value>
    <description>whether SSL is enabled (false by default)</description>
    <on-ambari-upgrade add="true"/>
  </property>
  
  <property>
    <name>nifi.node.ssl.port</name>
    <value>9091</value>
    <description>Port NiFi node runs on when SSL is enabled</description>
    <on-ambari-upgrade add="true"/>
  </property>

  <property>
    <name>nifi.initial_mem</name>
    <value>512m</value>
    <description>Initial memory allocation for NiFi JVM (Xms)</description>
    <on-ambari-upgrade add="true"/>
  </property>

  <property>
    <name>nifi.max_mem</name>
    <value>512m</value>
    <description>Max memory allocation for Nifi JVM (Xmx)</description>
    <on-ambari-upgrade add="true"/>
  </property>


  <property>
    <name>nifi.ambari_reporting_frequency</name>
    <value>1 mins</value>
    <description>Frequency with which Nifi metrics will be reported to Ambari Metrics. Only used during initial install of service. Post-install this can be reconfigured from Nifi UI under Controller Settings</description>
    <on-ambari-upgrade add="true"/>
  </property>

  <property>
    <name>nifi.nifi_znode</name>
    <value>/nifi</value>
    <description>Zookeeper znode for Nifi</description>
    <on-ambari-upgrade add="true"/>
  </property>


  <property>
    <name>nifi.internal.dir</name>
    <value>/var/lib/nifi</value>
    <description>Internal directory for Nifi (used to store archive, templates, work dirs). This directory must be writable by the nifi user</description>
    <on-ambari-upgrade add="true"/>
  </property>

  <property>
    <name>nifi.config.dir</name>
    <value>{{nifi_install_dir}}/conf</value>
    <description>The directory to store config files (nifi.properties, bootstrap.conf etc). This directory must be writable by the nifi user</description>
    <on-ambari-upgrade add="true"/>
  </property> 
    
  <property>
    <name>nifi.flow.config.dir</name>
    <value>{{nifi_internal_dir}}/conf</value>
    <description>The directory to store the flow.xml.gz file. This directory must be writable by the nifi user</description>
    <on-ambari-upgrade add="true"/>
  </property> 

  <property>
    <name>nifi.state.dir</name>
    <value>{{nifi_internal_dir}}/state/local</value>
    <description>The directory to store the state. This directory must be writable by the nifi user</description>
    <on-ambari-upgrade add="true"/>
  </property> 
  
  <property>
    <name>nifi.database.dir</name>
    <value>/var/lib/nifi/database_repository</value>
    <description>The directory for the database repository. This directory must be writable by the nifi user</description>
    <on-ambari-upgrade add="true"/>
  </property>

  <property>
    <name>nifi.flowfile.repository.dir</name>
    <value>/var/lib/nifi/flowfile_repository</value>
    <description>The directory for the flowfile repository. This directory must be writable by the nifi user</description>
    <on-ambari-upgrade add="true"/>
  </property>

  <property>
    <name>nifi.content.repository.dir.default</name>
    <value>/var/lib/nifi/content_repository</value>
    <description>The default directory for the content repository. This directory must be writable by the nifi user</description>
    <on-ambari-upgrade add="true"/>
  </property>

  <property>
    <name>nifi.provenance.repository.dir.default</name>
    <value>/var/lib/nifi/provenance_repository</value>
    <description>The default directory for the provenance repository. This directory must be writable by the nifi user</description>
    <on-ambari-upgrade add="true"/>
  </property>

</configuration>
