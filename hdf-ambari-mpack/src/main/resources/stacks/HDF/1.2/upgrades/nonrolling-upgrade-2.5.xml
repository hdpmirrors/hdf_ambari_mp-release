<upgrade xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <target>2.5.*.*</target>
  <target-stack>HDF-2.5</target-stack>
  <type>NON_ROLLING</type>
  <prerequisite-checks>
    <configuration>
      
      <check-properties name="org.apache.ambari.server.checks.HiveDynamicServiceDiscoveryCheck">
        <property name="min-failure-stack-version">HDF-0.3.0.0</property>
      </check-properties>
    </configuration>
  </prerequisite-checks>
  <order>
    <group name="PRE_CLUSTER" title="Prepare Upgrade" xsi:type="cluster">
      <direction>UPGRADE</direction>

      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>

      <execute-stage component="RESOURCEMANAGER" service="YARN" title="Stop YARN Queues">
        <task xsi:type="manual">
          <message>Before continuing, please stop all YARN queues. If yarn-site's yarn.resourcemanager.work-preserving-recovery.enabled is set to true, then you can skip this step since the clients will retry on their own.</message>
        </task>
      </execute-stage>

      <execute-stage component="SLIDER" service="SLIDER" title="Stop Long Running Applications on Slider">
        <task xsi:type="manual">
          <message>Before continuing, please stop all long-running applications deployed using Slider. E.g., su - yarn "/usr/hdf/current/slider-client/bin/slider stop &lt;app_name&gt;"</message>
        </task>
      </execute-stage>

      <execute-stage component="NIMBUS" service="STORM" title="Stop Storm Topologies">
        <task xsi:type="manual">
          <message>Before continuing, please deactivate and kill any currently running topologies.</message>
        </task>
      </execute-stage>

      <execute-stage component="TEZ_CLIENT" service="TEZ" title="Check Tez Tarball">
        <task hosts="any" xsi:type="execute">
          <script>scripts/pre_upgrade.py</script>
          <function>prepare</function>
        </task>
      </execute-stage>
    </group>

    <group name="STOP_HIGH_LEVEL_SERVICE_COMPONENTS" title="Stop Components for High-Level Services" xsi:type="stop">
      <direction>UPGRADE</direction>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <parallel-scheduler />
      <service-check>false</service-check>

      
      <service name="ATLAS">
        <component>ATLAS_SERVER</component>
      </service>

      <service name="FLUME">
        <component>FLUME_HANDLER</component>
      </service>
      
      <service name="ACCUMULO">
        <component>ACCUMULO_TRACER</component>
        <component>ACCUMULO_GC</component>
        <component>ACCUMULO_TSERVER</component>
        <component>ACCUMULO_MONITOR</component>
        <component>ACCUMULO_MASTER</component>
      </service>

      <service name="STORM">
        <component>DRPC_SERVER</component>
        <component>STORM_UI_SERVER</component>
        <component>SUPERVISOR</component>
        <component>NIMBUS</component>
      </service>

      <service name="KNOX">
        <component>KNOX_GATEWAY</component>
      </service>

      <service name="KAFKA">
        <component>KAFKA_BROKER</component>
      </service>

      <service name="FALCON">
        <component>FALCON_SERVER</component>
      </service>

      <service name="OOZIE">
        <component>OOZIE_SERVER</component>
      </service>

      <service name="SPARK">
        <component>SPARK_JOBHISTORYSERVER</component>
        <component>SPARK_THRIFTSERVER</component>
      </service>

      <service name="HIVE">
        <component>WEBHCAT_SERVER</component>
        <component>HIVE_SERVER</component>
        <component>HIVE_METASTORE</component>
      </service>

      <service name="YARN">
        <component>NODEMANAGER</component>
        <component>RESOURCEMANAGER</component>
        <component>APP_TIMELINE_SERVER</component>
      </service>

      <service name="MAPREDUCE2">
        <component>HISTORYSERVER</component>
      </service>
    </group>

    <group name="Backups" title="Perform Backups" xsi:type="cluster">
      <direction>UPGRADE</direction>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>

      <execute-stage component="OOZIE_SERVER" service="OOZIE" title="Backup Oozie Database">
        <task xsi:type="manual">
          <message>Before continuing, please backup the Oozie Server database referenced by the Oozie server located on {{hosts.all}}.</message>
        </task>
      </execute-stage>

      <execute-stage component="HIVE_METASTORE" service="HIVE" title="Backup Hive Metastore">
        <task xsi:type="manual">
          <message>Before continuing, please backup the Hive Metastore database referenced by the Hive Metastore service(s) located on the following host(s): {{hosts.all}}.</message>
        </task>
      </execute-stage>

      <execute-stage component="KNOX_GATEWAY" service="KNOX" title="Backup Knox Data">
        <task xsi:type="manual">
          <message>Before continuing, please backup the Knox data. E.g., "cp -RL /usr/hdf/current/knox-server/data/* ~/knox_backup/" on the following host(s): {{hosts.all}}.</message>
        </task>
      </execute-stage>

      <execute-stage component="HBASE_MASTER" service="HBASE" title="Snapshot HBASE">
        <task hosts="master" xsi:type="execute">
          <script>scripts/hbase_upgrade.py</script>
          <function>take_snapshot</function>
        </task>
      </execute-stage>

      <execute-stage component="NAMENODE" service="HDFS" title="Prepare HDFS">
        <task hosts="master" xsi:type="execute">
          <script>scripts/namenode.py</script>
          <function>prepare_express_upgrade</function>
        </task>
      </execute-stage>

      <execute-stage component="RANGER_ADMIN" service="RANGER" title="Backup Ranger Database">
        <task xsi:type="manual">
          <message>Before continuing, please backup the Ranger Admin database and Ranger Audit database on the following host(s): {{hosts.all}}. If audit database size is too large (greater than 3GB) then follow the below instructions:
            1. Backup the audit table from audit database.
            2. Truncate audit table.
            3. Follow upgrade process and once completed then restore audit data to audit table.</message>
        </task>
      </execute-stage>

      <execute-stage component="RANGER_KMS_SERVER" service="RANGER_KMS" title="Backup Ranger KMS Database">
        <task xsi:type="manual">
          <message>Before continuing, please backup Ranger KMS database on the following host(s): {{hosts.all}}.</message>
        </task>
      </execute-stage>
    </group>

    <group name="STOP_LOW_LEVEL_SERVICE_COMPONENTS" title="Stop Components for Core Services" xsi:type="stop">
      <direction>UPGRADE</direction>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <service-check>false</service-check>
      <parallel-scheduler />

      <service name="HBASE">
        <component>HBASE_REGIONSERVER</component>
        <component>HBASE_MASTER</component>
        <component>PHOENIX_QUERY_SERVER</component>
      </service>

      <service name="HDFS">
        <component>DATANODE</component>
        <component>NAMENODE</component>
        <component>SECONDARY_NAMENODE</component>
        <component>ZKFC</component>
        <component>JOURNALNODE</component>
        <component>NFS_GATEWAY</component>
      </service>

      <service name="RANGER">
        <component>RANGER_USERSYNC</component>
        <component>RANGER_ADMIN</component>
      </service>

      <service name="RANGER_KMS">
        <component>RANGER_KMS_SERVER</component>
      </service>

      <service name="ZOOKEEPER">
        <component>ZOOKEEPER_SERVER</component>
      </service>
    </group>

    <group name="Restore Backups" title="Restore Backups" xsi:type="cluster">
      <direction>DOWNGRADE</direction>
      <skippable>true</skippable>

      

      <execute-stage component="OOZIE_SERVER" service="OOZIE" title="Restore Oozie Database">
        <task xsi:type="manual">
          <message>Before continuing, please restore the Oozie Server database referenced by the Oozie server located on {{hosts.all}}.</message>
        </task>
      </execute-stage>

      <execute-stage component="HIVE_METASTORE" service="HIVE" title="Restore Hive Metastore">
        <task xsi:type="manual">
          <message>Before continuing, please restore the Hive Metastore database referenced by the Hive Metastore service(s) located on the following host(s):: {{hosts.all}}.</message>
        </task>
      </execute-stage>

      <execute-stage component="KNOX_GATEWAY" service="KNOX" title="Restore Knox Data">
        <task xsi:type="manual">
          <message>Before continuing, please restore the Knox data. E.g., "cp -RL ~/knox_backup/* /usr/hdf/$(old_version)/knox/data/" on the following host(s): {{hosts.all}}.</message>
        </task>
      </execute-stage>

      <execute-stage component="RANGER_ADMIN" service="RANGER" title="Restore Ranger Database">
        <task xsi:type="manual">
          <message>Before continuing, please restore the Ranger Admin database and Ranger Audit database on the following host(s): {{hosts.all}}.</message>
        </task>
      </execute-stage>

      <execute-stage component="RANGER_KMS_SERVER" service="RANGER_KMS" title="Restore Ranger KMS Database">
        <task xsi:type="manual">
          <message>Before continuing, please restore Ranger KMS database</message>
        </task>
      </execute-stage>

    </group>

    
    <group name="UPDATE_DESIRED_STACK_ID" title="Update Target Stack" xsi:type="update-stack">
      <execute-stage component="" service="" title="Update Target Stack">
        <task class="org.apache.ambari.server.serveraction.upgrades.UpdateDesiredStackAction" xsi:type="server_action">
        </task>
      </execute-stage>
    </group>

    <group name="Upgrade service configs" title="Upgrade service configs" xsi:type="cluster">
      <direction>UPGRADE</direction>   
      <skippable>true</skippable>  

      
      <execute-stage component="MAPREDUCE2_CLIENT" service="MAPREDUCE2" title="Apply config changes for Mapreduce2 client">
        <task class="org.apache.ambari.server.serveraction.upgrades.FixLzoCodecPath" summary="Verifying LZO codec path for mapreduce" xsi:type="server_action" />
      </execute-stage>

      
      <execute-stage component="RESOURCEMANAGER" service="YARN" title="Apply config changes for Yarn Resourcemanager">
        <task id="hdf_2_5_0_0_remove_ranger_yarn_audit_db" xsi:type="configure" />
      </execute-stage>

      
      <execute-stage component="TEZ_CLIENT" service="TEZ" title="Verify LZO codec path for Tez">
        <task class="org.apache.ambari.server.serveraction.upgrades.FixLzoCodecPath" summary="Verifying LZO codec path for Tez" xsi:type="server_action" />
      </execute-stage>

      <execute-stage component="TEZ_CLIENT" service="TEZ" title="Apply config changes for Tez">
        <task id="hdf_2_5_0_0_tez_client_adjust_tez_lib_uris_property" xsi:type="configure" />
      </execute-stage>

      
      <execute-stage component="OOZIE_SERVER" service="OOZIE" title="Apply config changes for Oozie Server">
        <task class="org.apache.ambari.server.serveraction.upgrades.OozieConfigCalculation" summary="Adjusting Oozie properties" xsi:type="server_action" />
      </execute-stage>

      
      <execute-stage component="RANGER_ADMIN" service="RANGER" title="Apply config changes for Ranger Admin">
        <task id="hdf_2_5_0_0_remove_audit_db_flag" xsi:type="configure" />
      </execute-stage>

      <execute-stage component="RANGER_ADMIN" service="RANGER" title="Apply config changes for Ranger Admin">
        <task id="hdf_2_5_0_0_remove_audit_db_admin_properties" xsi:type="configure" />
      </execute-stage>

      <execute-stage component="RANGER_ADMIN" service="RANGER" title="Apply config changes for Ranger Admin">
        <task id="hdf_2_5_0_0_remove_audit_db_ranger_admin_site" xsi:type="configure" />
      </execute-stage>

      
      <execute-stage component="NAMENODE" service="HDFS" title="Apply config changes for Hdfs Namenode">
        <task id="hdf_2_5_0_0_remove_ranger_hdfs_audit_db" xsi:type="configure" />
      </execute-stage>

      
      <execute-stage component="HIVE_SERVER" service="HIVE" title="Apply config changes for Hive Server">
        <task id="hdf_2_5_0_0_remove_ranger_hive_audit_db" xsi:type="configure" />
      </execute-stage>

      
      <execute-stage component="HBASE_MASTER" service="HBASE" title="Apply config changes for Hbase Master">
        <task id="hdf_2_5_0_0_remove_ranger_hbase_audit_db" xsi:type="configure" />
      </execute-stage>

      
      <execute-stage component="KNOX_GATEWAY" service="KNOX" title="Apply config changes for Knox Gateway">
        <task id="hdf_2_5_0_0_remove_ranger_knox_audit_db" xsi:type="configure" />
      </execute-stage>

      
      <execute-stage component="NIMBUS" service="STORM" title="Apply config changes for Storm Nimbus">
        <task id="hdf_2_5_0_0_remove_ranger_storm_audit_db" xsi:type="configure" />
      </execute-stage>

      
      <execute-stage component="KAFKA_BROKER" service="KAFKA" title="Apply config changes for Kafka Broker">
        <task id="hdf_2_5_0_0_remove_ranger_kafka_audit_db" xsi:type="configure" />
      </execute-stage>

      
      <execute-stage component="RANGER_KMS_SERVER" service="RANGER_KMS" title="Apply config changes for Ranger KMS Server">
        <task id="hdf_2_5_0_0_remove_ranger_kms_audit_db" xsi:type="configure" />
      </execute-stage>
    </group>

    
    <group name="ZOOKEEPER" title="ZooKeeper" xsi:type="restart">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <parallel-scheduler />
      <service name="ZOOKEEPER">
        <service-check>true</service-check>
        <component>ZOOKEEPER_SERVER</component>
        <component>ZOOKEEPER_CLIENT</component>
      </service>
    </group>

    <group name="RANGER" title="Ranger" xsi:type="restart">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <parallel-scheduler />
      <service name="RANGER">
        <component>RANGER_ADMIN</component>
        <component>RANGER_USERSYNC</component>
      </service>
    </group>

    <group name="RANGER_KMS" title="Ranger KMS" xsi:type="restart">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <parallel-scheduler />
      <service name="RANGER_KMS">
        <component>RANGER_KMS_SERVER</component>
      </service>
    </group>

    <group name="HDFS" title="HDFS" xsi:type="restart">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <parallel-scheduler />
      <service name="HDFS">
        <component>JOURNALNODE</component>
        <component>ZKFC</component>
        <component>NAMENODE</component>
        <component>SECONDARY_NAMENODE</component>
        <component>NFS_GATEWAY</component>
        <component>HDFS_CLIENT</component>
      </service>
    </group>

    <group name="HDFS_DATANODES" title="HDFS DataNodes" xsi:type="restart">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <parallel-scheduler />
      <service name="HDFS">
        <component>DATANODE</component>
      </service>
    </group>

    <group name="HDFS_LEAVE_SAFEMODE" title="HDFS - Wait to leave Safemode" xsi:type="cluster">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>

      <execute-stage component="NAMENODE" service="HDFS" title="Wait to leave Safemode">
        <task hosts="all" summary="Wait for NameNode to leave Safemode" xsi:type="execute">
          <script>scripts/namenode.py</script>
          <function>wait_for_safemode_off</function>
        </task>
      </execute-stage>
    </group>

    <group name="YARN_AND_MAPR" title="YARN and MapReduce2" xsi:type="restart">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <parallel-scheduler />

      <service name="MAPREDUCE2">
        <component>HISTORYSERVER</component>
        <component>MAPREDUCE2_CLIENT</component>
      </service>

      <service name="YARN">
        <component>APP_TIMELINE_SERVER</component>
        <component>RESOURCEMANAGER</component>
        <component>YARN_CLIENT</component>
      </service>
    </group>

    <group name="YARN_NODEMANAGERS" title="YARN NodeManagers" xsi:type="restart">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <parallel-scheduler />

      <service name="YARN">
        <component>NODEMANAGER</component>
      </service>
    </group>

    <group name="HBASE" title="HBASE" xsi:type="restart">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <parallel-scheduler />
      <service name="HBASE">
        <component>HBASE_MASTER</component>
        <component>HBASE_REGIONSERVER</component>
        <component>HBASE_CLIENT</component>
        <component>PHOENIX_QUERY_SERVER</component>
      </service>
    </group>

    <group name="CLIENTS" title="Tez, Pig, Sqoop Clients" xsi:type="restart">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <parallel-scheduler />
      <service name="TEZ">
        <component>TEZ_CLIENT</component>
      </service>

      <service name="MAHOUT">
        <component>MAHOUT</component>
      </service>

      <service name="PIG">
        <component>PIG</component>
      </service>

      <service name="SQOOP">
        <component>SQOOP</component>
      </service>
    </group>

    <group name="SERVICE_CHECK" title="All Service Checks" xsi:type="service-check">
      <skippable>true</skippable>
      <direction>UPGRADE</direction>
      <priority>
        <service>HDFS</service>
        <service>YARN</service>
        <service>MAPREDUCE2</service>
        <service>HBASE</service>
      </priority>
    </group>

    <group name="HIVE_MASTERS" title="Hive Masters" xsi:type="restart">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      
      <parallel-scheduler>
        <max-degree-of-parallelism>1</max-degree-of-parallelism>
      </parallel-scheduler>
      <service name="HIVE">
        <component>HIVE_METASTORE</component>
        <component>HIVE_SERVER</component>
        <component>WEBHCAT_SERVER</component>
      </service>
    </group>

    <group name="HIVE_CLIENTS" title="Hive Clients" xsi:type="restart">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <parallel-scheduler />
      <service name="HIVE">
        <component>HIVE_CLIENT</component>
        <component>HCAT</component>
      </service>
    </group>

    <group name="SPARK" title="Spark" xsi:type="restart">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <parallel-scheduler />
      <service name="SPARK">
        <component>SPARK_JOBHISTORYSERVER</component>
        <component>SPARK_THRIFTSERVER</component>
      </service>
    </group>

    <group name="SPARK_CLIENTS" title="Spark Clients" xsi:type="restart">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <parallel-scheduler />
      <service name="SPARK">
        <component>SPARK_CLIENT</component>
      </service>
    </group>

    
    <group name="ATLAS" title="Atlas" xsi:type="restart">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <parallel-scheduler />
      <service name="ATLAS">
        <component>ATLAS_SERVER</component>
      </service>
    </group>

    <group name="OOZIE" title="Oozie" xsi:type="restart">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <parallel-scheduler />
      <service name="OOZIE">
        <component>OOZIE_SERVER</component>
      </service>
    </group>

    <group name="OOZIE_CLIENTS" title="Oozie Clients" xsi:type="restart">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <parallel-scheduler />
      <service name="OOZIE">
        <component>OOZIE_CLIENT</component>
      </service>
    </group>

    <group name="FALCON" title="Falcon" xsi:type="restart">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>
      <parallel-scheduler />
      <service name="FALCON">
        <component>FALCON_SERVER</component>
      </service>
    </group>

    <group name="FALCON_CLIENTS" title="Falcon Clients" xsi:type="restart">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <parallel-scheduler />
      <service name="FALCON">
        <component>FALCON_CLIENT</component>
      </service>
    </group>

    <group name="KAFKA" title="Kafka" xsi:type="restart">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <parallel-scheduler />
      <service name="KAFKA">
        <component>KAFKA_BROKER</component>
      </service>
    </group>

    <group name="KNOX" title="Knox" xsi:type="restart">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <parallel-scheduler />
      <service name="KNOX">
        <component>KNOX_GATEWAY</component>
      </service>
    </group>

    <group name="STORM" title="Storm" xsi:type="restart">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <parallel-scheduler />
      <service name="STORM">
        <component>NIMBUS</component>
        <component>SUPERVISOR</component>
        <component>STORM_UI_SERVER</component>
        <component>DRPC_SERVER</component>
      </service>

      <execute-stage component="DRPC_SERVER" service="STORM" title="Rebuild Storm Topology">
        <task xsi:type="manual">
          <message>Please rebuild your topology using the new Storm version dependencies and resubmit it using the newly created jar.</message>
        </task>
      </execute-stage>
    </group>

    <group name="SLIDER" title="Slider" xsi:type="restart">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <parallel-scheduler />
      <service name="SLIDER">
        <component>SLIDER</component>
      </service>
    </group>

    <group name="FLUME" title="Flume" xsi:type="restart">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <parallel-scheduler />
      <service name="FLUME">
        <component>FLUME_HANDLER</component>
      </service>
    </group>
    
    <group name="ACCUMULO" title="Accumulo" xsi:type="restart">
      <service-check>false</service-check>
      <skippable>true</skippable>
      <parallel-scheduler />
      <service name="ACCUMULO">
        <component>ACCUMULO_MASTER</component>
        <component>ACCUMULO_TSERVER</component>
        <component>ACCUMULO_MONITOR</component>
        <component>ACCUMULO_GC</component>
        <component>ACCUMULO_TRACER</component>
        <component>ACCUMULO_CLIENT</component>
      </service>
    </group>

    
    <group name="ALL_HOST_OPS" title="Set Version On All Hosts" xsi:type="cluster">
      <scope>COMPLETE</scope>
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>

      <execute-stage title="Update stack to {{version}}">
        <task xsi:type="execute">
          <script>scripts/ru_set_all.py</script>
          <function>actionexecute</function>
        </task>
      </execute-stage>
    </group>

    <group name="FINALIZE_PRE_CHECK" title="Finalize {{direction.text.proper}} Pre-Check" xsi:type="cluster">
      <direction>UPGRADE</direction>
      
      <execute-stage title="Check Component Versions">
        <task class="org.apache.ambari.server.serveraction.upgrades.ComponentVersionCheckAction" xsi:type="server_action" />
      </execute-stage>
    </group>

    <group name="POST_CLUSTER" title="Finalize {{direction.text.proper}}" xsi:type="cluster">
      <skippable>true</skippable>
      <supports-auto-skip-failure>false</supports-auto-skip-failure>

      <execute-stage title="Confirm Finalize">
        <direction>UPGRADE</direction>
        <task xsi:type="manual">
          <message>Please confirm you are ready to finalize.</message>
        </task>
      </execute-stage>

      <execute-stage component="NAMENODE" service="HDFS" title="Execute HDFS Finalize">
        <task hosts="master" xsi:type="execute">
          <script>scripts/namenode.py</script>
          <function>finalize_non_rolling_upgrade</function>
        </task>
      </execute-stage>

      <execute-stage component="" service="" title="Save Cluster State">
        <task class="org.apache.ambari.server.serveraction.upgrades.FinalizeUpgradeAction" xsi:type="server_action">
        </task>
      </execute-stage>
    </group>
  </order>

  <processing>
    <service name="ZOOKEEPER">
      <component name="ZOOKEEPER_SERVER">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>

      <component name="ZOOKEEPER_CLIENT">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>
    </service>

    <service name="RANGER">
      <component name="RANGER_ADMIN">
        <pre-upgrade>
          <task hosts="any" sequential="true" summary="Upgrading Ranger database schema" xsi:type="execute">
            <script>scripts/ranger_admin.py</script>
            <function>setup_ranger_database</function>
          </task>
        </pre-upgrade>

        <pre-downgrade>
          <task hosts="any" sequential="true" summary="Downgrading Ranger database schema" xsi:type="execute">
            <script>scripts/ranger_admin.py</script>
            <function>setup_ranger_database</function>
          </task>
        </pre-downgrade>

        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>

        <post-upgrade>
          <task hosts="any" sequential="true" summary="Applying Ranger java patches" xsi:type="execute">
            <script>scripts/ranger_admin.py</script>
            <function>setup_ranger_java_patches</function>
          </task>
        </post-upgrade>

        <post-downgrade>
          <task hosts="any" sequential="true" summary="Applying Ranger java patches" xsi:type="execute">
            <script>scripts/ranger_admin.py</script>
            <function>setup_ranger_java_patches</function>
          </task>
        </post-downgrade>
      </component>

      <component name="RANGER_USERSYNC">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>
    </service>

    <service name="RANGER_KMS">
      <component name="RANGER_KMS_SERVER">
        <pre-upgrade>
          <task hosts="any" sequential="true" summary="Upgrading Ranger KMS database schema" xsi:type="execute">
            <script>scripts/kms_server.py</script>
            <function>setup_ranger_kms_database</function>
          </task>
        </pre-upgrade>

        <pre-downgrade>
          <task hosts="any" sequential="true" summary="Downgrading Ranger KMS database schema" xsi:type="execute">
            <script>scripts/kms_server.py</script>
            <function>setup_ranger_kms_database</function>
          </task>
        </pre-downgrade>

        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>
    </service>

    <service name="HDFS">
      <component name="NAMENODE">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>

      <component name="SECONDARY_NAMENODE">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>

      <component name="DATANODE">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>

      <component name="HDFS_CLIENT">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>

      <component name="JOURNALNODE">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>

      <component name="ZKFC">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>

      <component name="NFS_GATEWAY">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>
    </service>

    <service name="MAPREDUCE2">
      <component name="HISTORYSERVER">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>

      <component name="MAPREDUCE2_CLIENT">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>
    </service>

    <service name="YARN">
      <component name="APP_TIMELINE_SERVER">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>

      <component name="RESOURCEMANAGER">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>

      <component name="NODEMANAGER">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>

      <component name="YARN_CLIENT">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>
    </service>

    <service name="HBASE">
      <component name="HBASE_MASTER">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>

      <component name="HBASE_REGIONSERVER">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>

      <component name="HBASE_CLIENT">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>
    </service>

    <service name="TEZ">
      <component name="TEZ_CLIENT">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>
    </service>

    <service name="MAHOUT">
      <component name="MAHOUT">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>
    </service>

    <service name="PIG">
      <component name="PIG">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>
    </service>

    <service name="SQOOP">
      <component name="SQOOP">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>
    </service>

    <service name="HIVE">
      <component name="HIVE_METASTORE">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>

      <component name="HIVE_SERVER">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>

      <component name="WEBHCAT_SERVER">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>

      <component name="HIVE_CLIENT">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>

      <component name="HCAT">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>
    </service>

    <service name="SPARK">
      <component name="SPARK_JOBHISTORYSERVER">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>
      <component name="SPARK_THRIFTSERVER">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>
      <component name="SPARK_CLIENT">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>
    </service>

    <service name="OOZIE">
      <component name="OOZIE_SERVER">
        <pre-upgrade>
          
          <task hosts="first" xsi:type="configure_function" />

          <task hosts="first" sequential="true" summary="Upgrading the Oozie database and creating a new sharelib" xsi:type="execute">
            <script>scripts/oozie_server_upgrade.py</script>
            <function>upgrade_oozie_database_and_sharelib</function>
          </task>
        </pre-upgrade>

        <pre-downgrade>
          <task hosts="any" sequential="true" summary="Create a new sharelib" xsi:type="execute">
            <script>scripts/oozie_server_upgrade.py</script>
            <function>create_sharelib</function>
          </task>
        </pre-downgrade>

        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>

      <component name="OOZIE_CLIENT">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>
    </service>

    <service name="FALCON">
      <component name="FALCON_SERVER">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>
      <component name="FALCON_CLIENT">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>
    </service>

    <service name="KAFKA">
      <component name="KAFKA_BROKER">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>
    </service>

    <service name="KNOX">
      <component name="KNOX_GATEWAY">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>
    </service>

    <service name="STORM">
      <component name="NIMBUS">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>

      <component name="SUPERVISOR">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>

      <component name="STORM_UI_SERVER">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>

      <component name="DRPC_SERVER">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>
    </service>

    <service name="ACCUMULO">
      <component name="ACCUMULO_MASTER">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>

      <component name="ACCUMULO_TSERVER">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>

      <component name="ACCUMULO_MONITOR">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>

      <component name="ACCUMULO_GC">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>

      <component name="ACCUMULO_TRACER">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>

      <component name="ACCUMULO_CLIENT">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>
    </service>

    <service name="SLIDER">
      <component name="SLIDER">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>
    </service>

    <service name="FLUME">
      <component name="FLUME_HANDLER">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>
    </service>

    
    <service name="ATLAS">
      <component name="ATLAS_SERVER">
        <upgrade>
          <task xsi:type="restart-task" />
        </upgrade>
      </component>

    </service>
  </processing>
</upgrade>