<upgrade-config-changes xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="upgrade-config.xsd">

    <services>
        <service name="KAFKA">
            <component name="KAFKA_BROKER">
                <changes>
                    <definition xsi:type="configure" id="hdf_3_3_kafka_plaintext_sasl_config_change">
                        <type>kafka-broker</type>
                        <set key="security.inter.broker.protocol" value="SASL_PLAINTEXT"
                             if-type="kafka-broker" if-key="security.inter.broker.protocol" if-value="PLAINTEXTSASL"/>
                        <replace key="listeners" find="PLAINTEXTSASL://" replace-with="SASL_PLAINTEXT://"/>
                    </definition>
                </changes>
            </component>
        </service>


        <service name="NIFI">
            <component name="NIFI_MASTER">
                <changes>
                    <!-- Update these configs in nifi-properties. -->
                    <definition xsi:type="configure" id="hdf_3_3_0_0_update_nifi_properties_configs">
                        <type>nifi-properties</type>
                        <set key="nifi.version" value="1.8.0.{{stack_version_buildnum}}"/>
                    </definition>

                    <!-- Remove configuration from nifi-properties -->
                    <definition xsi:type="configure" id="hdf_3_3_remove_need_client_auth_nifi_properties">
                        <type>nifi-properties</type>
                        <transfer operation="delete" delete-key="nifi.security.needClientAuth" />
                    </definition>

                    <!-- Remove configuration from nifi-ambari-ssl-config -->
                    <definition xsi:type="configure" id="hdf_3_3_remove_need_client_auth_nifi_ambari_ssl_config">
                        <type>nifi-ambari-ssl-config</type>
                        <transfer operation="delete" delete-key="nifi.security.needClientAuth" />
                    </definition>

                </changes>
            </component>
        </service>

        <service name="RANGER">
          <component name="RANGER_ADMIN">
            <changes>
              <definition xsi:type="configure" id="hdf_3_3_0_0_ranger_services_heap_size_configuration" summary="Upgrading ranger-env configurations for Ranger service components">
                <type>ranger-env</type>
                <set key="ranger_admin_max_heap_size" value="1g" if-type="ranger-env" if-key="ranger_admin_max_heap_size" if-key-state="absent"/>
                <set key="ranger_usersync_max_heap_size" value="1g" if-type="ranger-env" if-key="ranger_usersync_max_heap_size" if-key-state="absent"/>
                <set key="ranger_tagsync_max_heap_size" value="1g" if-type="ranger-env" if-key="ranger_tagsync_max_heap_size" if-key-state="absent"/>
              </definition>
              <definition xsi:type="configure" id="hdf_3_3_0_0_ranger_patch_retry_configuration" summary="Upgrading admin-properties configurations for Ranger service components">
                <type>admin-properties</type>
                <set key="PATCH_RETRY_INTERVAL" value="120" if-type="admin-properties" if-key="PATCH_RETRY_INTERVAL" if-key-state="absent"/>
              </definition>
            </changes>
          </component>
        </service>
    </services>

</upgrade-config-changes>
